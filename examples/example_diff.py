from brdr.aligner import Aligner
from brdr.enums import OpenbaarDomeinStrategy, GRBType
from brdr.geometry_utils import safe_symmetric_difference, geom_from_wkt
from brdr.grb import GRBActualLoader
from brdr.loader import DictLoader


def main():

    aligner = Aligner(max_workers=None)
    relevant_distance = 15
    od_strategy = OpenbaarDomeinStrategy.SNAP_ALL_SIDE
    wkt = "Polygon ((174159.86498764005955309 179307.03392354605603032, 174261.82966211286839098 179298.04720647388603538, 174257.68194654109538533 179230.99247139683575369, 174246.62137168302433565 179223.0426832175871823, 174246.27572871872689575 179216.47546689561568201, 174258.7188754340459127 179214.40160910971462727, 174248.69522946892539039 179177.07216896372847259, 174229.68486643160576932 179182.60245639277854934, 174198.92264260759111494 179199.88460460852365941, 174153.9890572466829326 179211.63646539521869272, 174141.20026756706647575 179215.09289503836771473, 174141.20026756706647575 179215.09289503836771473, 174148.45876981766195968 179252.76797814865130931, 174159.86498764005955309 179307.03392354605603032))"
    wkt = "Polygon ((173773.66988192888675258 179514.52399982791393995, 173801.10608616709941998 179530.65382982976734638, 173931.40736798732541502 179611.27281510829925537, 174078.04176878236467019 179629.09588310681283474, 174280.05469680932583287 179569.44558737333863974, 174351.46164843259612098 179496.61523636244237423, 174335.60671524403733201 179455.38617126829922199, 174331.16058107223943807 179425.64216128829866648, 174348.64269148261519149 179363.99040084332227707, 174360.42594051550258882 179295.45192713756114244, 174341.39866621946566738 179197.04401163011789322, 174358.8869952189270407 179134.24635295104235411, 174283.39069474133430049 179099.59578586928546429, 174289.62856128191924654 178991.01253041252493858, 174167.19324753561522812 178942.42442009877413511, 174006.65193600184284151 178953.11535596195608377, 173714.49524312707944773 178916.33480669092386961, 173711.43248903870698996 179085.52870534732937813, 173728.93523737252689898 179269.6728869853541255, 173674.80573671424644999 179325.4449802627786994, 173607.21246577176498249 179317.13567749317735434, 173596.70450016154791228 179359.38730681408196688, 173674.31222398031968623 179434.04803174268454313, 173773.66988192888675258 179514.52399982791393995))"
    thematic_dict = {"id": geom_from_wkt(wkt)}
    # Add properties
    thematic_dict_properties = {
        "id": {"propA": 1, "propB": 1.1, "propC": "dit is tekst", "propD": None}
    }
    loader = DictLoader(
        data_dict=thematic_dict, data_dict_properties=thematic_dict_properties
    )
    aligner.load_thematic_data(loader)
    loader = GRBActualLoader(grb_type=GRBType.ADP, partition=1000, aligner=aligner)
    aligner.load_reference_data(loader)

    aligner.process(relevant_distance=relevant_distance, od_strategy=od_strategy)
    result_all_side = aligner.dict_processresults["id"][relevant_distance]["result"]
    print(result_all_side.wkt)
    aligner.process(
        relevant_distance=relevant_distance,
        od_strategy=OpenbaarDomeinStrategy.SNAP_ALL_SIDE,
    )
    result_all_side_all_area = aligner.dict_processresults["id"][relevant_distance][
        "result"
    ]
    print(result_all_side_all_area.wkt)
    diff = safe_symmetric_difference(result_all_side, result_all_side_all_area)
    print(diff.wkt)


if __name__ == "__main__":
    main()
