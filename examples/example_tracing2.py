import matplotlib.pyplot as plt

from brdr.enums import SnapStrategy
from brdr.geometry_utils import (
    snap_polygon_to_polygon,
    geom_from_wkt,
    polygon_to_multipolygon,
)

wkt_reference = "MultiPolygon (((173960.49493981152772903 179284.12735852599143982, 173959.4777878150343895 179281.92044652625918388, 173953.54351580888032913 179283.59923052787780762, 173951.62191580981016159 179283.86156652867794037, 173950.63740380853414536 179283.9960305280983448, 173949.38748380541801453 179278.27398252487182617, 173948.61135580390691757 179274.72089451923966408, 173948.24047580361366272 179273.02303852140903473, 173945.84885980188846588 179262.07443051412701607, 173945.54921180754899979 179260.70265451073646545, 173949.49039580672979355 179259.97119851037859917, 173949.68169181048870087 179259.93567851185798645, 173949.09135580807924271 179258.61811051145195961, 173942.1070358008146286 179243.02911850064992905, 173941.23804379999637604 179241.08953449875116348, 173940.53103580325841904 179239.51155049726366997, 173939.02140379697084427 179242.98553450033068657, 173933.81397979706525803 179254.96863850578665733, 173931.81705179810523987 179259.59059051051735878, 173930.16572379320859909 179263.4127345122396946, 173931.13551579415798187 179263.18783851340413094, 173931.98812379688024521 179262.99014251306653023, 173932.61282779276371002 179262.8453105129301548, 173935.1195157989859581 179262.26412651315331459, 173939.17500379681587219 179260.99097451195120811, 173939.72828380018472672 179263.52390251308679581, 173942.50940380245447159 179276.25542252138257027, 173943.06050780415534973 179278.77817452326416969, 173943.91663580387830734 179282.69753452762961388, 173944.99068380147218704 179287.61420653015375137, 173950.32303580641746521 179286.41497452929615974, 173960.3554198145866394 179284.1587185263633728, 173960.49493981152772903 179284.12735852599143982)))"
geom_reference = geom_from_wkt(wkt_reference)
geom_reference = polygon_to_multipolygon(geom_reference)

wkt = "Polygon ((173939.77281749932444654 179263.72777062203385867, 173942.50940380000974983 179276.2554225199855864, 173943.06050779999350198 179278.77817452000454068, 173943.91663580000749789 179282.69753452998702414, 173944.99068379998789169 179287.61420653000823222, 173950.32303580999723636 179286.41497452999465168, 173960.35541980998823419 179284.15871853000135161, 173960.49493981001432985 179284.12735853000776842, 173959.4777878200111445 179281.92044653001357801, 173953.54351580998627469 179283.59923053000238724, 173951.6219158100138884 179283.86156652998761274, 173950.63740380998933688 179283.99603052999009378, 173949.38748380998731591 179278.27398252001148649, 173948.61135580000700429 179274.72089451999636367, 173948.24047580000478774 179273.02303852001205087, 173945.9020742459979374 179262.3180415702809114, 173939.77281749932444654 179263.72777062203385867))"
geom = geom_from_wkt(wkt)
geom = polygon_to_multipolygon(geom)

# Traceer rond de feature
traced_geom = snap_polygon_to_polygon(
    geometry=geom,
    reference=geom_reference,
    snap_strategy=SnapStrategy.PREFER_VERTICES,
    max_segment_length=-1,
    tolerance=9,
)

# Visualisatie
fig, ax = plt.subplots()

# Plot de basispolygonen
for polygon in geom_reference.geoms:
    x, y = polygon.exterior.xy
    ax.plot(x, y, color="blue")

# Plot de traceerpolygonen
for polygon in geom.geoms:
    x, y = polygon.exterior.xy
    ax.plot(x, y, color="green")

# Plot het tracing resultaat
if traced_geom.geom_type == "Polygon":
    x, y = traced_geom.exterior.xy
    ax.plot(x, y, color="red")
elif traced_geom.geom_type == "MultiPolygon":
    for polygon in traced_geom.geoms:
        x, y = polygon.exterior.xy
        ax.plot(x, y, color="red")
if traced_geom.geom_type == "LineString":
    x, y = traced_geom.xy
    ax.plot(x, y, color="red")
elif traced_geom.geom_type == "MultiLineString":
    for line in traced_geom:
        x, y = line.xy
        ax.plot(x, y, color="red")
elif traced_geom.geom_type == "MultiPoint":
    for point in traced_geom.geoms:
        x = point.x
        y = point.y
        ax.plot(x, y, color="red")

ax.set_aspect("equal")
plt.show()
