import os

from shapely import from_wkt

from brdr.aligner import Aligner
from brdr.enums import AlignerInputType
from brdr.grb import GRBSpecificDateParcelLoader
from brdr.loader import DictLoader
from brdr.utils import write_geojson

if __name__ == "__main__":
    aligner = Aligner()
    thematic_dict = {
        "theme_id_1": from_wkt(
            "Polygon ((172283.76869662097305991 174272.85233648214489222, 172276.89871930953813717 174278.68436246179044247, 172274.71383684969623573 174280.57171753142029047, 172274.63047763772192411 174280.64478165470063686, 172272.45265833073062822 174282.52660570573061705, 172269.33533191855531186 174285.22093996312469244, 172265.55258252174826339 174288.49089696351438761, 172258.77032718938426115 174294.22654021997004747, 172258.63259260458289646 174294.342757155187428, 172254.93673790179309435 174288.79932878911495209, 172248.71360730109154247 174279.61860501393675804, 172248.96566232520854101 174279.43056782521307468, 172255.25363882273086347 174274.73737183399498463, 172257.08298882702365518 174273.37133203260600567, 172259.32325354730710387 174271.69890458136796951, 172261.65807284769834951 174269.9690355472266674, 172266.35596220899606124 174266.4871726930141449, 172273.34350050613284111 174261.30863015633076429, 172289.60360219911672175 174249.35944479051977396, 172293.30328181147342548 174246.59864199347794056, 172297.34760522318538278 174253.10583685990422964, 172289.53060952731175348 174259.6846851697191596, 172292.86485871637705714 174265.19099397677928209, 172283.76869662097305991 174272.85233648214489222))"
        )
    }
    # EXAMPLE to use a GRBSpecificLoader, that retrieves the parcels for a specific data, based on the 2 fiscal parcel-situations of the year before and after
    # Based on the date, the referencelayer will be different
    date = "2023-05-03"
    date = "2023-08-03"
    loader = DictLoader(thematic_dict)
    aligner.load_thematic_data(loader)
    loader = GRBSpecificDateParcelLoader(date=date, aligner=aligner)
    aligner.load_reference_data(loader)

    # aligner.process()
    # aligner.save_results(path = "output/")

    fc = aligner.get_input_as_geojson(
        inputtype=AlignerInputType.REFERENCE,
    )
    write_geojson(os.path.join("output/", "grb_adp_" + date + ".geojson"), fc)
